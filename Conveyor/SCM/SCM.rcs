PROGR DISPATCHER
{
	TACT 50;
	
	CONST Idiling 0;
	CONST RunNextTest 1;
 
	/*Набор команд для PLANT(виртуальный объект управления)*/
	ENUM
	{		
		SCM2VP_PUT_BOXES_ON_CONVEYOR,
		SCM2VP_BROKEN_PRESENCE_SENSOR,
		SCM2VP_BROKEN_COLOR_SENSORS,
		SCM2VP_FINISH_VERIFICATION
	};
 
	/*Набор команд для VERIFIER(блок верификации)*/	
	ENUM 
	{
		SCM2VM_TEST_PUT_BOXES_ON_CONVEYOR,
		SCM2VM_TEST_BROKEN_PRESENCE_SENSOR,
		SCM2VM_TEST_BROKEN_COLOR_SENSORS,
		SCM2VM_FINISH_VERIFICATION
	};

	/*Набор команд для DISPATCHER(блока управления сценарием) от VERIFIER(блока верификации)*/
	ENUM
	{
		VM2SCM_START_VERIFICATION,
		VM2SCM_NEXT_TEST
	};
	
	FUNCTION INT SendMsgToVirtualPlantCode(INT);
	FUNCTION INT SendMsgToVerificationModuleCode(INT);
	FUNCTION INT GetNextMsgFromVM(VOID);
	FUNCTION INT GetMsgCodeFromVM(VOID);

	PROC Init
	{
		STATE Start
		{  
			START PROC ReceiveVMOutputMsg; 			
			STOP;
		}
	}	
	
	PROC ReceiveVMOutputMsg
	{
		LOG nextTest FOR ALL; 
		INT VMMsgCode LOCAL;
		STATE Start
		{
			nextTest = Idiling;
			IF (GetNextMsgFromVM()) 
			{
				VMMsgCode = GetMsgCodeFromVM();
				SWITCH (VMMsgCode)
				{
				CASE VM2SCM_START_VERIFICATION:
					START PROC TestDriver;
					BREAK;
				CASE VM2SCM_NEXT_TEST:
					nextTest = RunNextTest;
					BREAK;
				}
			}
		LOOP;			
		}
	}
	
	PROC TestDriver
	{
		FROM PROC ReceiveVMOutputMsg nextTest;
		
		STATE RunTestPutBoxesOnConveyor
		{
			START PROC TestRandomBoxes;
			SET NEXT;
		}
		
		STATE IdilingTest1
		{
			IF (nextTest == RunNextTest)
			{
				STOP PROC TestRandomBoxes;
				SET NEXT;
			}		
		}
		
		STATE RunTestBrokenPresenceSensor
		{
			START PROC TestBrokenPresenceSensor;
			SET NEXT;
		}
		
		STATE IdilingTest2
		{
			IF (nextTest == RunNextTest)
			{
				STOP PROC TestBrokenPresenceSensor;
				SET NEXT;
			}		
		}
		
		STATE RunTestBrokenColorSensors
		{
			START PROC TestBrokenColorSensors;
			SET NEXT;
		}
		
		STATE IdilingTest3
		{
			IF (nextTest == RunNextTest)
			{
				STOP PROC TestBrokenColorSensors;
				SET NEXT;
			}		
		}

		STATE Finish
		{
			SendMsgToVerificationModuleCode(SCM2VM_FINISH_VERIFICATION);
			SendMsgToVirtualPlantCode(SCM2VP_FINISH_VERIFICATION);
			STOP;
		}
	}
	
	PROC TestRandomBoxes
	{
		STATE Start 
		{
			SendMsgToVirtualPlantCode(SCM2VP_PUT_BOXES_ON_CONVEYOR);
			SendMsgToVerificationModuleCode(SCM2VM_TEST_PUT_BOXES_ON_CONVEYOR);
			SET NEXT;
		}
		STATE Idiling
		{
			LOOP;
		}
	}
			
	PROC TestBrokenPresenceSensor
	{
		STATE Start 
		{
			SendMsgToVirtualPlantCode(SCM2VP_BROKEN_PRESENCE_SENSOR);
			SendMsgToVerificationModuleCode(SCM2VM_TEST_BROKEN_PRESENCE_SENSOR);
			SET NEXT;
		}
		STATE Idiling
		{
			LOOP;
		}
	}
	
	PROC TestBrokenColorSensors
	{
		STATE Start 
		{
			SendMsgToVirtualPlantCode(SCM2VP_BROKEN_COLOR_SENSORS);
			SendMsgToVerificationModuleCode(SCM2VM_TEST_BROKEN_COLOR_SENSORS);
			SET NEXT;
		}
		STATE Idiling
		{
			LOOP;
		}
	}
}  /* \Прогр */




















