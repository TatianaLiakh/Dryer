    1          PROGR SCM{
    2          
    3          TACT 50;
    4          CONST ON 1;
    5          CONST OFF 0;
    6          
    7          CONST Idiling 0;
    8          CONST RunNextTest 1;
    9          
   10           
   11          /*Набор команд для ВОУ*/
   12          ENUM
   13          {
   14          	SCM2VP_INSERT_HANDS,
   15          	SCM2VP_TAKE_AWAY_HANDS
   16          };
   17           
   18          /*Набор команд для БВ*/
   19          ENUM 
   20          {
   21          	SCM2VM_TEST_DRYER_NORMAL_TURN_ON,
   22          	SCM2VM_TEST_DRYER_NORMAL_TURN_OFF, 
   23          	SCM2VM_FINISH_VERIFICATION
   24          };
   25          
   26          /*Набор команд для БУС от БВ*/
   27          ENUM
   28          {
   29          	VM2SCM_START_VERIFICATION,
   30          	VM2SCM_NEXT_TEST
   31          };
   32          
   33          FUNCTION INT SendMsgToVirtualPlantCode( INT );
   34          FUNCTION INT SendMsgToVerificationModuleCode( INT );
   35          FUNCTION INT SendMsgToControlAlgorythmCode( INT );
   36          
   37          FUNCTION INT GetNextMsgFromVM( VOID );
   38          FUNCTION INT GetMsgCodeFromVM( VOID );
   39          
   40          PROC Init{
   41          
   42          STATE Start
   43          {  
   44          	START PROC ReceiveVMOutputMsg; 
   45          	STOP;
   46           }
   47          } /* \ПРОЦ */
   48          
   49          PROC ReceiveVMOutputMsg
   50          {
   51          	LOG nextTest FOR ALL; 
   52          	INT VMMsgCode LOCAL;
   53          	STATE Start
   54          	{
   55          		nextTest = Idiling;
   56          		IF (GetNextMsgFromVM()) 
   57          		{
   58          	
   59          			VMMsgCode = GetMsgCodeFromVM();
   60          			SWITCH (VMMsgCode)
   61          			{
   62          				CASE VM2SCM_START_VERIFICATION:
   63          					START PROC TestDriver;
   64          					BREAK;
   65          				CASE VM2SCM_NEXT_TEST:
   66          					nextTest = RunNextTest;
   67          					BREAK;
   68          			}
   69          		}
   70          		LOOP;
   71          	}
   72          } 
   73          
   74          
   75          PROC TestDriver
   76          {
   77          FROM PROC ReceiveVMOutputMsg nextTest;
   78          	STATE RunTestHandsUnderDryer
   79          	{
   80          		START PROC TestHandsUnderDryer;
   81          		SET NEXT;
   82          	}
   83          	STATE IdilingTest1
   84          	{
   85          		IF (nextTest == RunNextTest)
   86          		{
   87          			STOP PROC TestHandsUnderDryer;
   88          			SET NEXT;
   89          		}		
   90          	}
   91          	STATE RunTestRemoveHands
   92          	{
   93          		START PROC TestRemoveHands;
   94          		SET NEXT;
   95          	}
   96          	STATE IdilingTest2
   97          	{
   98          		IF (nextTest == RunNextTest)
   99          		{
  100          			STOP PROC TestRemoveHands;
  101          			SET NEXT;
  102          		}		
  103          	}
  104          	STATE Finish
  105          	{
  106          		SendMsgToVerificationModuleCode(SCM2VM_FINISH_VERIFICATION);
  107          		STOP;
  108          	}
  109          }
  110          
  111          PROC TestHandsUnderDryer
  112          {
  113          	STATE Start
  114          	{
  115          		SendMsgToVirtualPlantCode(SCM2VP_INSERT_HANDS);
  116          		SendMsgToVerificationModuleCode(SCM2VM_TEST_DRYER_NORMAL_TURN_ON);
  117          		SET NEXT;
  118          	}
  119          	STATE Idiling
  120          	{
  121          		LOOP;
  122          	}
  123          }
  124          
  125          PROC TestRemoveHands
  126          {
  127          	STATE Start
  128          	{
  129          		SendMsgToVirtualPlantCode(SCM2VP_TAKE_AWAY_HANDS);
  130          		SendMsgToVerificationModuleCode(SCM2VM_TEST_DRYER_NORMAL_TURN_OFF);
  131          		SET NEXT;
  132          	}
  133          	STATE Idiling
  134          	{
  135          		LOOP;
  136          	}
  137          }
  138          
  139          }  /* \Прогр */

%RCSL-I-SUMMARY, Completed with 0 error(s).
%RCSL-I-SUMMARY, Completed with 0 warning(s).

 %RCSL-I-SUMMARY, Completed with 0 error(s).