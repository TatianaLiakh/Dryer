PROGR VM{

TACT 50;
CONST ON 1;
CONST OFF 0;
CONST AlgorithmDelay 10;
CONST ObjectDelay 10;
CONST TestIdling 100;

/*Набор команд для БВ*/
 ENUM 
{
	SCM2VM_TEST_DRYER_NORMAL_TURN_ON,
	SCM2VM_TEST_DRYER_NORMAL_TURN_OFF, 
	SCM2VM_FINISH_VERIFICATION
};

/*Набор команд для БУС от БВ*/
ENUM
{
	VM2SCM_START_VERIFICATION,
	VM2SCM_NEXT_TEST
};
/*Набор Команд для GUI */
ENUM
{
	VM2GUI_TEST_PASSED_DRYER_NORMAL_TURN_ON, 
	VM2GUI_TEST_PASSED_DRYER_NORMAL_TURN_OFF,
	VM2GUI_TEST_FAILED_DRYER_NORMAL_TURN_ON,
	VM2GUI_TEST_FAILED_DRYER_NORMAL_TURN_OFF,
	VM2GUI_TEST_NOT_ACTIVE_DRYER_NORMAL_TURN_ON,
	VM2GUI_TEST_NOT_ACTIVE_DRYER_NORMAL_TURN_OFF,
	VM2GUI_START_TEST_DRYER_TURN_ON,
	VM2GUI_START_TEST_DRYER_TURN_OFF,
	VM2GUI_END_VERIFICATION
	
	/* VM2GUI_TEST_DEBUG_ERROR, VM2GUI_TEST_DEBUG_NORM */
};

FUNCTION INT  SendMsgGUICode(INT);

/*CA Input msg queue*/

FUNCTION INT GetNextMsgFromCA(VOID);
FUNCTION INT GetMsgCodeFromCA(VOID);  /*чтение из памяти кода события */

/*SCM  Input msg queue*/
FUNCTION INT GetNextMsgFromSCM(VOID);
FUNCTION INT GetMsgCodeFromSCM(VOID);  /*чтение из памяти кода события */

/*SCM  Output msg queue*/
FUNCTION INT SendMsgToSCM( INT );


INPUT  LOG_CA_INPUT_PORT 0 0 8; /* имя, базовый адрес, доп. адр. порта, 8бит */
INPUT  LOG_CA_OUTPUT_PORT  0 1 8; /* имя, базовый адрес, доп. адр. порта, 8бит */

PROC Init
{
	LOG I_HANDS_UNDER_DRYER    = {LOG_CA_INPUT_PORT[1]} FOR ALL;
	LOG O_HANDS_UNDER_DRYER = {LOG_CA_OUTPUT_PORT[1]} FOR ALL;
	
	STATE Start
	{
		SendMsgToSCM(VM2SCM_START_VERIFICATION);
		START PROC ReceiveSCMOutputMsg;
		STOP;
	}

} 

/*Заменить на два требования:*/
/* 1) После появления рук сушилка срабатывает не позже, чем через 0.1 с.*/
/* 2) сушилка выключится ровно через секунду*/


PROC ReceiveSCMOutputMsg{  

INT SCMsgCode LOCAL;
 STATE Start{
    /*  читаем код и параметр события из кольцевого буфера в структуру */
    IF (GetNextMsgFromSCM()) 
	{
		SCMsgCode = GetMsgCodeFromSCM();
		SWITCH (SCMsgCode) 
		{
			CASE SCM2VM_TEST_DRYER_NORMAL_TURN_ON:
				SendMsgGUICode(VM2GUI_START_TEST_DRYER_TURN_ON);
				START PROC DryerNormalTurnOnControl;
				START PROC Terminator; 	
				BREAK;
			CASE SCM2VM_TEST_DRYER_NORMAL_TURN_OFF: 
				SendMsgGUICode(VM2GUI_START_TEST_DRYER_TURN_OFF);
				START PROC DryerNormalTurnOffControl;
				START PROC Terminator; 
				BREAK;
			CASE SCM2VM_FINISH_VERIFICATION:
				SendMsgGUICode(VM2GUI_END_VERIFICATION);
				STOP PROC Terminator; 
				STOP;
				BREAK;
		}
	}
	LOOP;
}
}

PROC Terminator
{
	STATE Idling
	{
		TIMEOUT TestIdling SET NEXT;
	}
	STATE Report
	{
	/*DryerNormalTurnOnControl*/
		IF(PROC DryerNormalTurnOnControl SET STATE ACTIVE)
		{
			SendMsgGUICode(VM2GUI_TEST_PASSED_DRYER_NORMAL_TURN_ON);
		}
		IF (PROC DryerNormalTurnOnControl SET STATE ERROR)
		{
			SendMsgGUICode(VM2GUI_TEST_FAILED_DRYER_NORMAL_TURN_ON);
		}


		STOP PROC DryerNormalTurnOnControl;
		
		/*DryerNormalTurnOffControl*/
		
		IF(PROC DryerNormalTurnOffControl SET STATE ACTIVE)
		{
			SendMsgGUICode(VM2GUI_TEST_PASSED_DRYER_NORMAL_TURN_OFF);
		}

		IF (PROC DryerNormalTurnOffControl SET STATE ERROR)
		{
			SendMsgGUICode(VM2GUI_TEST_FAILED_DRYER_NORMAL_TURN_OFF);
		}

		 
		STOP PROC DryerNormalTurnOffControl;
		
		SendMsgToSCM(VM2SCM_NEXT_TEST);
		STOP;
	}
	
}

/*Проверка требования: Если руки появились под сушилкой, то по прошествии AlgorithmDelay тактов сушилка обязательно включится*/
PROC DryerNormalTurnOnControl
{
FROM PROC Init I_HANDS_UNDER_DRYER, O_HANDS_UNDER_DRYER;

	STATE WaitingOfHands
	{
		IF(I_HANDS_UNDER_DRYER == ON) 
			SET STATE WaitingOnLaunch;
		TIMEOUT ObjectDelay ERROR;
	}
	#C O_HANDS_UNDER_DRYER++; 
	STATE WaitingOnLaunch
	{
		IF (O_HANDS_UNDER_DRYER == ON)
		{
			SET NEXT; 
		}
		TIMEOUT AlgorithmDelay ERROR;
	}
	STATE StabilityControl
	{
		/*??? Ждем руки. Ждем запуск. А если руки пропадути после запуска - все равно ошибка?*/
		IF (I_HANDS_UNDER_DRYER == OFF)
				SET STATE WaitingOfHands; 
		ELSE IF(O_HANDS_UNDER_DRYER == OFF) ERROR;
		
	}

}


/*Проверка требования: Если рук нет под сушилкой, то ровно через AlgorithmDelay тактов сушилка обязательно выключится*/
PROC DryerNormalTurnOffControl
{
FROM PROC Init I_HANDS_UNDER_DRYER, O_HANDS_UNDER_DRYER;

	STATE WaitingOff
	{
		
		IF (O_HANDS_UNDER_DRYER == OFF) ERROR;
		TIMEOUT AlgorithmDelay SET NEXT;
	}
	STATE StabilityControl
	{
		IF (O_HANDS_UNDER_DRYER == ON) ERROR;
	}

}

}



